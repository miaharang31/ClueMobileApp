// Generated by view binder compiler. Do not edit!
package com.example.clue_frontend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.clue_frontend.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCharacterSelectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button gameStart;

  @NonNull
  public final Button greenSelect;

  @NonNull
  public final Button mustardSelect;

  @NonNull
  public final Button peacockSelect;

  @NonNull
  public final Button plumSelect;

  @NonNull
  public final Button scarletSelect;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final Button whiteSelect;

  private ActivityCharacterSelectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button gameStart, @NonNull Button greenSelect, @NonNull Button mustardSelect,
      @NonNull Button peacockSelect, @NonNull Button plumSelect, @NonNull Button scarletSelect,
      @NonNull TextView textView5, @NonNull Button whiteSelect) {
    this.rootView = rootView;
    this.gameStart = gameStart;
    this.greenSelect = greenSelect;
    this.mustardSelect = mustardSelect;
    this.peacockSelect = peacockSelect;
    this.plumSelect = plumSelect;
    this.scarletSelect = scarletSelect;
    this.textView5 = textView5;
    this.whiteSelect = whiteSelect;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCharacterSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCharacterSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_character_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCharacterSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gameStart;
      Button gameStart = ViewBindings.findChildViewById(rootView, id);
      if (gameStart == null) {
        break missingId;
      }

      id = R.id.greenSelect;
      Button greenSelect = ViewBindings.findChildViewById(rootView, id);
      if (greenSelect == null) {
        break missingId;
      }

      id = R.id.mustardSelect;
      Button mustardSelect = ViewBindings.findChildViewById(rootView, id);
      if (mustardSelect == null) {
        break missingId;
      }

      id = R.id.peacockSelect;
      Button peacockSelect = ViewBindings.findChildViewById(rootView, id);
      if (peacockSelect == null) {
        break missingId;
      }

      id = R.id.plumSelect;
      Button plumSelect = ViewBindings.findChildViewById(rootView, id);
      if (plumSelect == null) {
        break missingId;
      }

      id = R.id.scarletSelect;
      Button scarletSelect = ViewBindings.findChildViewById(rootView, id);
      if (scarletSelect == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.whiteSelect;
      Button whiteSelect = ViewBindings.findChildViewById(rootView, id);
      if (whiteSelect == null) {
        break missingId;
      }

      return new ActivityCharacterSelectionBinding((ConstraintLayout) rootView, gameStart,
          greenSelect, mustardSelect, peacockSelect, plumSelect, scarletSelect, textView5,
          whiteSelect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
