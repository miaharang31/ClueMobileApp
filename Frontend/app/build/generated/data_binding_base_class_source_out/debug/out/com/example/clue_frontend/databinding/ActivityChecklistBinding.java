// Generated by view binder compiler. Do not edit!
package com.example.clue_frontend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.clue_frontend.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChecklistBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ScrollView ScrollView;

  @NonNull
  public final CheckBox ballroom;

  @NonNull
  public final CheckBox billiard;

  @NonNull
  public final CheckBox candlestick;

  @NonNull
  public final CheckBox conservatory;

  @NonNull
  public final CheckBox dining;

  @NonNull
  public final TextView exit;

  @NonNull
  public final CheckBox green;

  @NonNull
  public final CheckBox hall;

  @NonNull
  public final CheckBox kitchen;

  @NonNull
  public final CheckBox knife;

  @NonNull
  public final CheckBox library;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final CheckBox lounge;

  @NonNull
  public final CheckBox mustard;

  @NonNull
  public final CheckBox peacock;

  @NonNull
  public final CheckBox pipe;

  @NonNull
  public final CheckBox plum;

  @NonNull
  public final CheckBox revolver;

  @NonNull
  public final CheckBox rope;

  @NonNull
  public final CheckBox scarlet;

  @NonNull
  public final CheckBox study;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final CheckBox white;

  @NonNull
  public final CheckBox wrench;

  private ActivityChecklistBinding(@NonNull ScrollView rootView, @NonNull ScrollView ScrollView,
      @NonNull CheckBox ballroom, @NonNull CheckBox billiard, @NonNull CheckBox candlestick,
      @NonNull CheckBox conservatory, @NonNull CheckBox dining, @NonNull TextView exit,
      @NonNull CheckBox green, @NonNull CheckBox hall, @NonNull CheckBox kitchen,
      @NonNull CheckBox knife, @NonNull CheckBox library, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull CheckBox lounge, @NonNull CheckBox mustard, @NonNull CheckBox peacock,
      @NonNull CheckBox pipe, @NonNull CheckBox plum, @NonNull CheckBox revolver,
      @NonNull CheckBox rope, @NonNull CheckBox scarlet, @NonNull CheckBox study,
      @NonNull TextView textView, @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull CheckBox white, @NonNull CheckBox wrench) {
    this.rootView = rootView;
    this.ScrollView = ScrollView;
    this.ballroom = ballroom;
    this.billiard = billiard;
    this.candlestick = candlestick;
    this.conservatory = conservatory;
    this.dining = dining;
    this.exit = exit;
    this.green = green;
    this.hall = hall;
    this.kitchen = kitchen;
    this.knife = knife;
    this.library = library;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.lounge = lounge;
    this.mustard = mustard;
    this.peacock = peacock;
    this.pipe = pipe;
    this.plum = plum;
    this.revolver = revolver;
    this.rope = rope;
    this.scarlet = scarlet;
    this.study = study;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.white = white;
    this.wrench = wrench;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChecklistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChecklistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_checklist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChecklistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ScrollView ScrollView = (ScrollView) rootView;

      id = R.id.ballroom;
      CheckBox ballroom = ViewBindings.findChildViewById(rootView, id);
      if (ballroom == null) {
        break missingId;
      }

      id = R.id.billiard;
      CheckBox billiard = ViewBindings.findChildViewById(rootView, id);
      if (billiard == null) {
        break missingId;
      }

      id = R.id.candlestick;
      CheckBox candlestick = ViewBindings.findChildViewById(rootView, id);
      if (candlestick == null) {
        break missingId;
      }

      id = R.id.conservatory;
      CheckBox conservatory = ViewBindings.findChildViewById(rootView, id);
      if (conservatory == null) {
        break missingId;
      }

      id = R.id.dining;
      CheckBox dining = ViewBindings.findChildViewById(rootView, id);
      if (dining == null) {
        break missingId;
      }

      id = R.id.exit;
      TextView exit = ViewBindings.findChildViewById(rootView, id);
      if (exit == null) {
        break missingId;
      }

      id = R.id.green;
      CheckBox green = ViewBindings.findChildViewById(rootView, id);
      if (green == null) {
        break missingId;
      }

      id = R.id.hall;
      CheckBox hall = ViewBindings.findChildViewById(rootView, id);
      if (hall == null) {
        break missingId;
      }

      id = R.id.kitchen;
      CheckBox kitchen = ViewBindings.findChildViewById(rootView, id);
      if (kitchen == null) {
        break missingId;
      }

      id = R.id.knife;
      CheckBox knife = ViewBindings.findChildViewById(rootView, id);
      if (knife == null) {
        break missingId;
      }

      id = R.id.library;
      CheckBox library = ViewBindings.findChildViewById(rootView, id);
      if (library == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.lounge;
      CheckBox lounge = ViewBindings.findChildViewById(rootView, id);
      if (lounge == null) {
        break missingId;
      }

      id = R.id.mustard;
      CheckBox mustard = ViewBindings.findChildViewById(rootView, id);
      if (mustard == null) {
        break missingId;
      }

      id = R.id.peacock;
      CheckBox peacock = ViewBindings.findChildViewById(rootView, id);
      if (peacock == null) {
        break missingId;
      }

      id = R.id.pipe;
      CheckBox pipe = ViewBindings.findChildViewById(rootView, id);
      if (pipe == null) {
        break missingId;
      }

      id = R.id.plum;
      CheckBox plum = ViewBindings.findChildViewById(rootView, id);
      if (plum == null) {
        break missingId;
      }

      id = R.id.revolver;
      CheckBox revolver = ViewBindings.findChildViewById(rootView, id);
      if (revolver == null) {
        break missingId;
      }

      id = R.id.rope;
      CheckBox rope = ViewBindings.findChildViewById(rootView, id);
      if (rope == null) {
        break missingId;
      }

      id = R.id.scarlet;
      CheckBox scarlet = ViewBindings.findChildViewById(rootView, id);
      if (scarlet == null) {
        break missingId;
      }

      id = R.id.study;
      CheckBox study = ViewBindings.findChildViewById(rootView, id);
      if (study == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.white;
      CheckBox white = ViewBindings.findChildViewById(rootView, id);
      if (white == null) {
        break missingId;
      }

      id = R.id.wrench;
      CheckBox wrench = ViewBindings.findChildViewById(rootView, id);
      if (wrench == null) {
        break missingId;
      }

      return new ActivityChecklistBinding((ScrollView) rootView, ScrollView, ballroom, billiard,
          candlestick, conservatory, dining, exit, green, hall, kitchen, knife, library,
          linearLayout, linearLayout2, linearLayout3, lounge, mustard, peacock, pipe, plum,
          revolver, rope, scarlet, study, textView, textView2, textView3, white, wrench);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
