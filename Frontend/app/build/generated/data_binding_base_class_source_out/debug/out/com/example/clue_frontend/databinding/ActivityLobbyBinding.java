// Generated by view binder compiler. Do not edit!
package com.example.clue_frontend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.clue_frontend.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLobbyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView Host;

  @NonNull
  public final CardView Player01;

  @NonNull
  public final CardView Player02;

  @NonNull
  public final CardView Player03;

  @NonNull
  public final CardView Player04;

  @NonNull
  public final CardView Player05;

  @NonNull
  public final CardView Player06;

  @NonNull
  public final TextView cur;

  @NonNull
  public final TextView hostNameText;

  @NonNull
  public final MaterialCardView materialCardView;

  @NonNull
  public final TextView max;

  @NonNull
  public final ConstraintLayout names;

  @NonNull
  public final TextView player01;

  @NonNull
  public final TextView player02;

  @NonNull
  public final TextView player03;

  @NonNull
  public final TextView player04;

  @NonNull
  public final TextView player05;

  @NonNull
  public final TextView player06;

  @NonNull
  public final TextView slash;

  @NonNull
  public final Button startGame;

  private ActivityLobbyBinding(@NonNull ConstraintLayout rootView, @NonNull CardView Host,
      @NonNull CardView Player01, @NonNull CardView Player02, @NonNull CardView Player03,
      @NonNull CardView Player04, @NonNull CardView Player05, @NonNull CardView Player06,
      @NonNull TextView cur, @NonNull TextView hostNameText,
      @NonNull MaterialCardView materialCardView, @NonNull TextView max,
      @NonNull ConstraintLayout names, @NonNull TextView player01, @NonNull TextView player02,
      @NonNull TextView player03, @NonNull TextView player04, @NonNull TextView player05,
      @NonNull TextView player06, @NonNull TextView slash, @NonNull Button startGame) {
    this.rootView = rootView;
    this.Host = Host;
    this.Player01 = Player01;
    this.Player02 = Player02;
    this.Player03 = Player03;
    this.Player04 = Player04;
    this.Player05 = Player05;
    this.Player06 = Player06;
    this.cur = cur;
    this.hostNameText = hostNameText;
    this.materialCardView = materialCardView;
    this.max = max;
    this.names = names;
    this.player01 = player01;
    this.player02 = player02;
    this.player03 = player03;
    this.player04 = player04;
    this.player05 = player05;
    this.player06 = player06;
    this.slash = slash;
    this.startGame = startGame;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLobbyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLobbyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_lobby, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLobbyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Host;
      CardView Host = ViewBindings.findChildViewById(rootView, id);
      if (Host == null) {
        break missingId;
      }

      id = R.id.Player01;
      CardView Player01 = ViewBindings.findChildViewById(rootView, id);
      if (Player01 == null) {
        break missingId;
      }

      id = R.id.Player02;
      CardView Player02 = ViewBindings.findChildViewById(rootView, id);
      if (Player02 == null) {
        break missingId;
      }

      id = R.id.Player03;
      CardView Player03 = ViewBindings.findChildViewById(rootView, id);
      if (Player03 == null) {
        break missingId;
      }

      id = R.id.Player04;
      CardView Player04 = ViewBindings.findChildViewById(rootView, id);
      if (Player04 == null) {
        break missingId;
      }

      id = R.id.Player05;
      CardView Player05 = ViewBindings.findChildViewById(rootView, id);
      if (Player05 == null) {
        break missingId;
      }

      id = R.id.Player06;
      CardView Player06 = ViewBindings.findChildViewById(rootView, id);
      if (Player06 == null) {
        break missingId;
      }

      id = R.id.cur;
      TextView cur = ViewBindings.findChildViewById(rootView, id);
      if (cur == null) {
        break missingId;
      }

      id = R.id.hostNameText;
      TextView hostNameText = ViewBindings.findChildViewById(rootView, id);
      if (hostNameText == null) {
        break missingId;
      }

      id = R.id.materialCardView;
      MaterialCardView materialCardView = ViewBindings.findChildViewById(rootView, id);
      if (materialCardView == null) {
        break missingId;
      }

      id = R.id.max;
      TextView max = ViewBindings.findChildViewById(rootView, id);
      if (max == null) {
        break missingId;
      }

      ConstraintLayout names = (ConstraintLayout) rootView;

      id = R.id.player_01;
      TextView player01 = ViewBindings.findChildViewById(rootView, id);
      if (player01 == null) {
        break missingId;
      }

      id = R.id.player_02;
      TextView player02 = ViewBindings.findChildViewById(rootView, id);
      if (player02 == null) {
        break missingId;
      }

      id = R.id.player_03;
      TextView player03 = ViewBindings.findChildViewById(rootView, id);
      if (player03 == null) {
        break missingId;
      }

      id = R.id.player_04;
      TextView player04 = ViewBindings.findChildViewById(rootView, id);
      if (player04 == null) {
        break missingId;
      }

      id = R.id.player_05;
      TextView player05 = ViewBindings.findChildViewById(rootView, id);
      if (player05 == null) {
        break missingId;
      }

      id = R.id.player_06;
      TextView player06 = ViewBindings.findChildViewById(rootView, id);
      if (player06 == null) {
        break missingId;
      }

      id = R.id.slash;
      TextView slash = ViewBindings.findChildViewById(rootView, id);
      if (slash == null) {
        break missingId;
      }

      id = R.id.startGame;
      Button startGame = ViewBindings.findChildViewById(rootView, id);
      if (startGame == null) {
        break missingId;
      }

      return new ActivityLobbyBinding((ConstraintLayout) rootView, Host, Player01, Player02,
          Player03, Player04, Player05, Player06, cur, hostNameText, materialCardView, max, names,
          player01, player02, player03, player04, player05, player06, slash, startGame);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
